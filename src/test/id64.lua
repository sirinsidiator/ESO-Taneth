-- SPDX-FileCopyrightText: 2023 sirinsidiator
--
-- SPDX-License-Identifier: Artistic-2.0

if not Taneth then return end
Taneth("eso", function()
    describe("id64", function()
        describe("string to id64 to string", function()
            local cases = {
                {"-1", "18446744073709551615"},
                {"1", "1"},
                {"2147483647", "2147483647"},
                {"4294967295", "4294967295"},
                {"4294967296", "4294967296"},
                {"9007199254740991", "9007199254740991"},
                {"-9007199254740991", "18437736874454810625"},
                {"9223372036854775807", "9223372036854775807"},
                {"9223372036854775808", "9223372036854775808"},
                {"-9223372036854775808", "9223372036854775808"},
                {"18446744073709551615", "18446744073709551615"},
                {"18446744073709551616", "18446744073709551615"},
                {"-18446744073709551615", "1"},
                {"-18446744073709551616", "18446744073709551615"},
                {"", "0"},
                {"a", "0"},
                {"1a", "1"},
                {"1a2", "1"},
                {"123a2", "123"},
                {"0.1", "0"},
            }
            for i = 1, #cases do
                local input, expected = unpack(cases[i])
                it(input, function()
                    local temp = StringToId64(input)
                    local actual = Id64ToString(temp)
                    assert.equals(expected, actual)
                end)
            end
        end)

        describe("CompareId64s", function()
            local cases = {
                {"0", "0", 0},
                {"0", "1", -1},
                {"1", "0", 1},
                {"2147483647", "2147483647", 0},
                {"2147483648", "2147483648", 0},
                {"2147483647", "2147483648", -1},
                {"2147483648", "2147483647", 1},
                {"4294967295", "4294967295", 0},
                {"4294967296", "4294967296", 0},
                {"4294967295", "4294967296", -1},
                {"4294967296", "4294967295", 1},
                {"9007199254740991", "9007199254740991", 0},
                {"9007199254740992", "9007199254740992", 0},
                {"9007199254740991", "9007199254740992", -1},
                {"9007199254740992", "9007199254740991", 1},
                {"9007199254740991", "9007199254740991", 0},
                {"9007199254740992", "9007199254740992", 0},
                {"9007199254740991", "9007199254740992", -1},
                {"9007199254740992", "9007199254740991", 1},
                {"9223372036854775807", "9223372036854775807", 0},
                {"9223372036854775808", "9223372036854775808", 0},
                {"9223372036854775807", "9223372036854775808", -1},
                {"9223372036854775808", "9223372036854775807", 1},
                {"18446744073709551614", "18446744073709551614", 0},
                {"18446744073709551615", "18446744073709551615", 0},
                {"18446744073709551614", "18446744073709551615", -1},
                {"18446744073709551615", "18446744073709551614", 1},
            }
            for i = 1, #cases do
                local inputA, inputB, expected = unpack(cases[i])
                it(inputA .. " with " .. inputB, function()
                    local a = StringToId64(inputA)
                    local b = StringToId64(inputB)
                    local actual = CompareId64s(a, b)
                    assert.equals(expected, actual)
                end)
            end
        end)

        describe("CompareId64ToNumber", function()
            local cases = {
                {"0", 0, 0},
                {"0", 1, -1},
                {"1", 0, 1},
                {"2147483647", 2147483647, 0},
                {"2147483648", 2147483648, 0},
                {"2147483647", 2147483648, -1},
                {"2147483648", 2147483647, 1},
                {"4294967295", 4294967295, 0},
                {"4294967296", 4294967296, 0},
                {"4294967295", 4294967296, -1},
                {"4294967296", 4294967295, 1},
                {"9007199254740991", 9007199254740991, 0},
                {"9007199254740992", 9007199254740992, 0},
                {"9007199254740991", 9007199254740992, -1},
                {"9007199254740992", 9007199254740991, 1},
                {"9007199254740991", 9007199254740991, 0},
                {"9007199254740992", 9007199254740992, 0},
                {"9007199254740991", 9007199254740992, -1},
                {"9007199254740992", 9007199254740991, 1},
            }
            for i = 1, #cases do
                local inputA, inputB, expected = unpack(cases[i])
                it(inputA .. " with " .. inputB, function()
                    local a = StringToId64(inputA)
                    local actual = CompareId64ToNumber(a, inputB)
                    assert.equals(expected, actual)
                end)
            end
        end)
    end)
end)